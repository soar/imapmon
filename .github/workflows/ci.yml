name: üêç CI
on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*
  workflow_dispatch:

jobs:

  lint:
    name: Linters and checkers
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}

    strategy:
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipenv setuptools
          python -m pipenv install --system --deploy --dev

      - name: Run prospector
        run: prospector

  publish-package:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    needs:
      - lint

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with:
          python-version: 3.8

      # TODO: add `pyproject.toml` according to PEP 517/PEP 518
      # - name: Install pep517
      #   run: python -m pip install pep517 --user
      # - name: Build a binary wheel and a source tarball
      #   run: python -m pep517.build --source --binary --out-dir dist/ .

      - name: Install requirements
        run: python -m pip install --upgrade --user setuptools wheel twine

      - name: Bump version
        run: sed -i "$ s/$/.${GITHUB_RUN_NUMBER}/" version.txt

      - name: Prepare packages
        run: python setup.py sdist bdist_wheel

      - name: Publish distribution üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution üì¶ to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}

  publish-image:
    name: üì¶ (Re)Build and publish Docker image
    runs-on: ubuntu-latest

    needs:
      - lint

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build and push to GitHub Packages
        uses: docker/build-push-action@v4
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/imapmon
          tag_with_ref: true
          tag_with_sha: true
          add_git_labels: true
          always_pull: true
